(executable
 (name apply_patch)
 (modules Apply_patch)
 (libraries patch))

(executable
 (name chmodx)
 (modules Chmodx)
 (libraries unix))

(rule
 (targets library_flags.sexp)
 (deps
  (:discover config/configure.exe))
 (action
  (run %{discover})))

(data_only_dirs vendor)

(rule
 (alias build-raylib)
 (targets libraylib.a dllraylib.so)
 (enabled_if
  (or
   (= %{system} linux)
   (= %{system} linux_elf)
   (= %{system} elf)))
 (deps
  (source_tree vendor/raylib)
  enable_formats.patch
  apply_patch.exe
  chmodx.exe)
 (action
  (no-infer
   (progn
    (run ./chmodx.exe vendor/raylib/src/config.h)
    (run ./apply_patch.exe enable_formats.patch)
    (run make -C vendor/raylib/src RAYLIB_LIBTYPE=STATIC -j 8)
    (copy vendor/raylib/src/libraylib.a libraylib.a)
    (run make -C vendor/raylib/src clean)
    (run make -C vendor/raylib/src RAYLIB_LIBTYPE=SHARED -j 8)
    (copy vendor/raylib/src/libraylib.so.5.5.0 dllraylib.so)))))

(rule
 (alias build-raylib)
 (targets libraylib.a dllraylib.so)
 (enabled_if
  (= %{system} macosx))
 (deps
  (source_tree vendor/raylib)
  enable_formats.patch
  apply_patch.exe
  chmodx.exe)
 (action
  (no-infer
   (progn
    (run ./chmodx.exe vendor/raylib/src/config.h)
    (run ./apply_patch.exe enable_formats.patch)
    (run make -C vendor/raylib/src RAYLIB_LIBTYPE=STATIC -j 8)
    (copy vendor/raylib/src/libraylib.a libraylib.a)
    (run make -C vendor/raylib/src clean)
    (run make -C vendor/raylib/src RAYLIB_LIBTYPE=SHARED -j 8)
    (copy vendor/raylib/src/libraylib.5.5.0.dylib dllraylib.so)))))

(rule
 (alias build-raylib)
 (targets libraylib.a dllraylib.dll)
 (enabled_if
  (and
   (= %{system} mingw64)
   (<> %{os_distribution} msys2)))
 (deps
  (source_tree vendor/raylib)
  enable_formats.patch
  mingw64.patch
  apply_patch.exe
  chmodx.exe)
 (action
  (no-infer
   (progn
    (run ./chmodx.exe vendor/raylib/src/config.h)
    (run ./apply_patch.exe enable_formats.patch)
    (run ./chmodx.exe vendor/raylib/src/Makefile)
    (run ./apply_patch.exe mingw64.patch)
    (run make -C vendor/raylib/src RAYLIB_LIBTYPE=STATIC -j 8)
    (copy vendor/raylib/src/libraylib.a libraylib.a)
    (run make -C vendor/raylib/src clean)
    (run make -C vendor/raylib/src RAYLIB_LIBTYPE=SHARED -j 8)
    (copy vendor/raylib/src/raylib.dll dllraylib.dll)))))

(rule
 (alias build-raylib)
 (targets libraylib.a dllraylib.dll)
 (enabled_if
  (and
   (= %{system} mingw64)
   (= %{os_distribution} msys2)))
 (deps
  (source_tree vendor/raylib)
  enable_formats.patch
  msys2.patch
  apply_patch.exe
  chmodx.exe)
 (action
  (no-infer
   (progn
    (run ./chmodx.exe vendor/raylib/src/config.h)
    (run ./apply_patch.exe enable_formats.patch)
    (run ./chmodx.exe vendor/raylib/src/Makefile)
    (run ./apply_patch.exe msys2.patch)
    (run make -C vendor/raylib/src RAYLIB_LIBTYPE=STATIC -j 8)
    (copy vendor/raylib/src/libraylib.a libraylib.a)
    (run make -C vendor/raylib/src clean)
    (run make -C vendor/raylib/src RAYLIB_LIBTYPE=SHARED -j 8)
    (copy vendor/raylib/src/raylib.dll dllraylib.dll)))))

(rule
 (alias build-raylib)
 (targets libraylib.a dllraylib.so)
 (enabled_if
  (or
   (= %{system} netbsd)
   (= %{system} freebsd)
   (= %{system} openbsd)
   (= %{system} bsd)
   (= %{system} bsd_elf)))
 (deps
  (source_tree vendor/raylib)
  enable_formats.patch
  freebsd.patch
  apply_patch.exe
  chmodx.exe)
 (action
  (no-infer
   (progn
    (run ./chmodx.exe vendor/raylib/src/config.h)
    (run ./apply_patch.exe enable_formats.patch)
    (run ./chmodx.exe vendor/raylib/src/Makefile)
    (run ./apply_patch.exe freebsd.patch)
    (run gmake -C vendor/raylib/src RAYLIB_LIBTYPE=STATIC -j 8)
    (copy vendor/raylib/src/libraylib.a libraylib.a)
    (run gmake -C vendor/raylib/src clean)
    (run gmake -C vendor/raylib/src RAYLIB_LIBTYPE=SHARED -j 8)
    (copy vendor/raylib/src/libraylib.5.5.0.so dllraylib.so)))))
